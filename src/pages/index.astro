---
import CyberpunkLayout from '../layouts/CyberpunkLayout.astro';
import CyberTabs from '../components/Cyberpunk/CyberTabs.jsx'

const pageTitle = "Krayorn's Blog";
const pageDescription = "A blog containing my thoughts and reflections on AI, Software, Board Games and whatever else finds it's way in my mind.";
const seoProps = {
  pageTitle: pageTitle,
  pageDescription: pageDescription,
}

const tabsData = [
  {
    title: "Krayorn's blog",
    content: [
    "That's my website. It's a part of my identity. An aggregate that shows my tastes, my passions, my hobbies. That's where you should start to find out anything about me.",
    "That's where I started my online journey, it's a hub where you can find my social links to contact me, my blog posts and all of my other projects.",
    "See your around, edgerunner."
    ],
    kind: "web",
    status: "live",
    tasks: [
      {name: "Transform the blog with a Cyberpunk theme", targeted: true},
    ]
  },  
  {
    title: "DonkeyCarrot",
    content: [
      "This is the first app I made. And the first time I earned money by selling something online. It's a little silly, but this app tracks your daily income in your macOs menu bar.",
      "Enter your daily wage, your work schedule, and it will increase durig the day, with an occasional animation every time you earn a certain amount."
    ],
    kind: "app",
    status: "in progress",
    tasks: [
      {name: "Complete the landing page", targeted: true},
      {name: "Aggressive marketing on Instagram && Tiktok", targeted: false},
    ]
  },
  {
    title: "bg-log",
    content: [
      "The first 'big project' I worked on. The target is to use it to log every time I play some board game, enter some details and then get some fun statistics.",
      "You can customize what you want to track so it's compatible with every board game, see with whom you play and if one of your friend always uses the same character."

    ],
    tasks: [
      {name: "UX redesign to encourage the use of the app"}
    ],
    kind: "web",
    status: "paused"
  },
  {
    title: "Algorithm arena",
    content: [
      "I've participated in a lot of online challenges. One of them was the Algorithm Arena. Every week, a prize pool and a small challenge.",
      "I've participated quite a lot and you can find all my submissions on here."
    ],
    kind: "contest",
    status: "completed"
  },
  {
    title: "Scotland diary",
    content: [
      "I made a website with my partner after our trip to scotland. It's kind of a diary with our commentary, some locations and a recap of what we did there.",
      "A good way to recall our experience."
    ],
    kind: "web",
    status: "completed"
  },
  {
    title: "Dwarf Clicker",
    content: [
      "I got hooked on the game Universal Paperclip for a week and decided that I wanted to make a similar idle click game."
    ],
    tasks: [
      {name: "Add the second 'level'"}
    ],
    kind: "web",
    status: "paused"
  },
]

import { getPosts } from '../utils/blog';

const shuffle = (array) => { 
  for (let i = array.length - 1; i > 0; i--) { 
    const j = Math.floor(Math.random() * (i + 1)); 
    [array[i], array[j]] = [array[j], array[i]]; 
  } 
  return array; 
}; 

const allPosts = shuffle(await getPosts());

---
<CyberpunkLayout seoProps={seoProps}>
  <div class="flex w-full mt-[100px]">
    <CyberTabs className="ml-16 w-2/3" data={tabsData} client:load />
    <div class="w-1/6 ml-auto h-[500px]">
      <div class="h-4 mb-8 text-center">Latest news</div>
      <div class="h-full relative overflow-hidden">
        <div class="posts_container absolute">
          <div>
            {allPosts.map(p => (
              <div class="border border-neonr p-4">
                {p.data.title}
              </div>
            ))}
          </div>
          <div class="posts_secondary">
            {allPosts.slice(0, 9).map(p => (
              <div class="border border-neonr p-4">
                {p.data.title}
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </div>
</CyberpunkLayout>

<style>
  /* Calculate animation duration based on number of items */
  .posts_container {
    animation: smoothScroll 20s linear infinite;
    will-change: transform;

  }

  .posts_secondary {
    position: absolute;
    top: 100%;
  }

  @keyframes smoothScroll {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(-100%);
    }
  }

  /* Optional: Pause on hover */
  .posts_container:hover {
    animation-play-state: paused;
  }
</style>